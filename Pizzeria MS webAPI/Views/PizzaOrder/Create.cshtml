@model Pizzeria_MS_webAPI.Models.PizzaOrder

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<style>
    .field-validation-error {
        color: #e80c4d;
        font-weight: bold;
    }

    input.input-validation-error {
        border: 1px solid #e80c4d;
    }
</style>

<h3>New Order</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <br />
            @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <br />
            @Html.LabelFor(model => model.PizzaName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PizzaName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PizzaName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <br />
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <br />
            @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <br />
            @Html.LabelFor(model => model.Price, htmlAttributes: new { id = "ppp", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="b1" value="Stuffed Crust" class="btn btn-outline-dark" onclick="@{
  ((Pizzeria_MS_webAPI.Controllers.PizzaOrderController)this.ViewContext.Controller).createthincrust();
                    }
    " />
                <br />
                <br />
                <input value="Thin Crust" class="btn btn-outline-dark" onclick="@{
  ((Pizzeria_MS_webAPI.Controllers.PizzaOrderController)this.ViewContext.Controller).createstuffedcrust();
}" />
                <br />
                <br />
                <input value="Extra Cheese" class="btn btn-outline-dark" onclick="@{
  ((Pizzeria_MS_webAPI.Controllers.PizzaOrderController)this.ViewContext.Controller).createExtraToppings();
}" />
                <br />
                <br />
                <input value="Extra Toppings" class="btn btn-outline-dark" onclick="@{
  ((Pizzeria_MS_webAPI.Controllers.PizzaOrderController)this.ViewContext.Controller).createExtracheese();

}" />
                <br />
                <br />
                <input value="Add these" class="btn btn-outline-dark" onclick="
    function change{document.getElementById(ppp).nodeValue=parseInt(document.getElementById(ppp).nodeValue)+@{
  ((Pizzeria_MS_webAPI.Controllers.PizzaOrderController)this.ViewContext.Controller).getpizzaprice();
                    }}" />
                <br />
                <br />
            </div>
        </div>
        <div class="form-group">
            <br />
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                <input type="reset" value="Clear" class="btn btn-danger" />
            </div>
            <br />
        </div>
        <br />
    </div>
    <br />
}





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
